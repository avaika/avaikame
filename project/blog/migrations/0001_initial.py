# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-03-18 22:50
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('slug', models.SlugField(max_length=150, verbose_name='Slug')),
                ('metaTitle', models.CharField(blank=True, max_length=150, verbose_name='Meta title')),
                ('metaDesc', models.CharField(blank=True, max_length=150, verbose_name='Meta description')),
            ],
            options={
                'ordering': ('-title',),
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(blank=True, verbose_name='Creation time')),
                ('titleImage', models.ImageField(blank=True, upload_to=b'blog_posts/', verbose_name=b'Title image')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('title_ru', models.CharField(max_length=150, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=150, null=True, verbose_name='Title')),
                ('slug', models.SlugField(max_length=150, verbose_name='Slug')),
                ('post', models.TextField(blank=True, null=True, verbose_name='Post body')),
                ('post_ru', models.TextField(blank=True, null=True, verbose_name='Post body')),
                ('post_en', models.TextField(blank=True, null=True, verbose_name='Post body')),
                ('metaTitle', models.CharField(blank=True, max_length=150, verbose_name='Meta title')),
                ('metaTitle_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='Meta title')),
                ('metaTitle_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Meta title')),
                ('metaDesc', models.CharField(blank=True, max_length=150, verbose_name='Meta description')),
                ('metaDesc_ru', models.CharField(blank=True, max_length=150, null=True, verbose_name='Meta description')),
                ('metaDesc_en', models.CharField(blank=True, max_length=150, null=True, verbose_name='Meta description')),
                ('draft', models.BooleanField(default=True, verbose_name='Is draft')),
                ('sources', models.TextField(blank=True, null=True, verbose_name='Sources')),
                ('sources_ru', models.TextField(blank=True, null=True, verbose_name='Sources')),
                ('sources_en', models.TextField(blank=True, null=True, verbose_name='Sources')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='Category')),
            ],
            options={
                'ordering': ('-created',),
                'verbose_name': 'Post',
                'verbose_name_plural': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=150, verbose_name='Title')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, to='blog.Tag', verbose_name='Tags'),
        ),
    ]
